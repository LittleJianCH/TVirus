data List a = Nil() | Cat(a, List a)

let map = \f, l. match l with
    | Nil() -> Nil()
    | Cat(x, xs) -> Cat(f(x), map(f, xs))

let reverseAppend = \l1, l2. match l1 with
    | Nil() -> l2
    | Cat(a, l) -> reverseAppend(l, Cons(a, l2))

let reverse = \l. reverseAppend(l, Nil())

let main = map((\x. x), Nil())